{"version":3,"file":"index.umd.min.js","sources":["../node_modules/string-convert/camel2hyphen.js","../node_modules/json2mq/index.js","../src/helpers.js","../src/utils.js","../src/component.js","../src/index.js"],"sourcesContent":["var camel2hyphen = function (str) {\n  return str\n          .replace(/[A-Z]/g, function (match) {\n            return '-' + match.toLowerCase();\n          })\n          .toLowerCase();\n};\n\nmodule.exports = camel2hyphen;","var camel2hyphen = require('string-convert/camel2hyphen');\n\nvar isDimension = function (feature) {\n  var re = /[height|width]$/;\n  return re.test(feature);\n};\n\nvar obj2mq = function (obj) {\n  var mq = '';\n  var features = Object.keys(obj);\n  features.forEach(function (feature, index) {\n    var value = obj[feature];\n    feature = camel2hyphen(feature);\n    // Add px to dimension features\n    if (isDimension(feature) && typeof value === 'number') {\n      value = value + 'px';\n    }\n    if (value === true) {\n      mq += feature;\n    } else if (value === false) {\n      mq += 'not ' + feature;\n    } else {\n      mq += '(' + feature + ': ' + value + ')';\n    }\n    if (index < features.length-1) {\n      mq += ' and '\n    }\n  });\n  return mq;\n};\n\nvar json2mq = function (query) {\n  var mq = '';\n  if (typeof query === 'string') {\n    return query;\n  }\n  // Handling array of media queries\n  if (query instanceof Array) {\n    query.forEach(function (q, index) {\n      mq += obj2mq(q);\n      if (index < query.length-1) {\n        mq += ', '\n      }\n    });\n    return mq;\n  }\n  // Handling single media query\n  return obj2mq(query);\n};\n\nmodule.exports = json2mq;","import json2mq from 'json2mq';\nexport const listeners = [];\n\nexport function convertBreakpointsToMediaQueries(breakpoints) {\n  const keys = Object.keys(breakpoints)\n  const values = keys.map(key => breakpoints[key])\n  const breakpointValues = [0, ...values.slice(0, -1)]\n  const mediaQueries = breakpointValues.reduce((sum, value, index) => {\n    const options = Object.assign(\n      {\n        minWidth: value,\n      },\n      index < keys.length - 1 ? { maxWidth: breakpointValues[index+1] - 1 } : {}\n    )\n    const mediaQuery = json2mq(options)\n    return Object.assign(\n      sum,\n      {\n        [keys[index]]: mediaQuery,\n      }\n    )\n  }, {})\n  return mediaQueries\n}\n\nexport function selectBreakpoints(breakpoints, currentBreakpoint) {\n  const index = breakpoints.findIndex(b => b === currentBreakpoint)\n  return breakpoints.slice(index)\n}\n\nexport function subscribeToMediaQuery(mediaQuery, enter) {\n  const mql = window.matchMedia(mediaQuery)\n  const cb = ({ matches }) => {\n    if (matches) enter()\n  }\n  listeners.push({mql, cb});\n  mql.addEventListener('change', cb) //subscribing\n  cb(mql) //initial trigger\n}","import { ref, readonly } from \"vue\";\nimport { convertBreakpointsToMediaQueries, subscribeToMediaQuery, listeners } from \"./helpers\";\nconst state = {\n  mqAvailableBreakpoints: ref({}),\n  currentBreakpoint: ref(\"\")\n}\n\nexport const setAvailableBreakpoints = (v) => state.mqAvailableBreakpoints.value = v;\nexport const mqAvailableBreakpoints = readonly(state.mqAvailableBreakpoints);\n\nexport const setCurrentBreakpoint = (v) => state.currentBreakpoint.value = v;\nexport const currentBreakpoint = readonly(state.currentBreakpoint);\n\nexport function isArray (arg) {\n  return Object.prototype.toString.call(arg) === '[object Array]';\n}\n\nexport function updateBreakpoints(breakpoints) {\n  for (let i = listeners.length - 1; i >= 0; i--) {\n    const { mql, cb } = listeners[i];\n    mql.removeEventListener('change', cb);\n    listeners.splice(i,1);\n  }\n  setAvailableBreakpoints(breakpoints);\n  const mediaQueries = convertBreakpointsToMediaQueries(breakpoints)\n  // setup listeners\n  for (const key in mediaQueries) {\n    const mediaQuery = mediaQueries[key];\n    const enter = () => { setCurrentBreakpoint(key) }\n    subscribeToMediaQuery(mediaQuery, enter)\n  }\n}","// USAGE\n// mq-layout(mq=\"lg\")\n//   p Iâ€™m lg\nimport { selectBreakpoints } from \"./helpers\";\nimport { isArray } from \"./utils\";\nimport { mqAvailableBreakpoints, currentBreakpoint } from \"./utils\";\nimport { computed, h } from \"vue\";\n\nexport default {\n    name: \"MqLayout\",\n    props: {\n        mq: {\n            required: true,\n            type: [String, Array],\n        },\n        tag: {\n          type: String,\n          default: 'div'\n        }\n    },\n    setup(props, context) {\n        const plusModifier = computed(\n            () => !isArray(props.mq) && props.mq.slice(-1) === \"+\"\n        );\n        const activeBreakpoints = computed(() => {\n            const breakpoints = Object.keys(mqAvailableBreakpoints.value);\n            const mq = plusModifier.value\n                ? props.mq.slice(0, -1)\n                : isArray(props.mq)\n                ? props.mq\n                : [props.mq];\n            return plusModifier.value ? selectBreakpoints(breakpoints, mq) : mq;\n        });\n\n        const shouldRenderChildren = computed(() =>\n            activeBreakpoints.value.includes(currentBreakpoint.value)\n        );\n        return () =>\n            shouldRenderChildren.value\n                ? h(props.tag, {}, context.slots.default())\n                : h();\n    },\n};\n","import MqLayout from './component.js'\nimport { setAvailableBreakpoints, setCurrentBreakpoint, currentBreakpoint, updateBreakpoints } from \"./utils\";\n\nconst DEFAULT_BREAKPOINTS = {\n  sm: 450,\n  md: 1250,\n  lg: Infinity,\n}\n\nconst install = function (app, { breakpoints = DEFAULT_BREAKPOINTS, defaultBreakpoint = 'sm' } = {}) {  \n  let hasSetupListeners = false\n  setCurrentBreakpoint(defaultBreakpoint);\n\n  app.provide('updateBreakpoints', updateBreakpoints)\n\n  // Init reactive component\n  app.mixin({\n    computed: {\n      $mq() {\n        return currentBreakpoint.value;\n      },\n    },\n    mounted() {\n      if (!hasSetupListeners) {\n        updateBreakpoints(breakpoints)\n        hasSetupListeners = true\n      }\n    }\n  })\n\n  app.config.globalProperties.$mqAvailableBreakpoints = breakpoints;\n  app.component('mq-layout', MqLayout)\n}\n\nexport default { install };\n"],"names":["str","replace","match","toLowerCase","obj2mq","obj","mq","features","Object","keys","forEach","feature","index","value","test","isDimension","camel2hyphen","length","query","Array","q","listeners","convertBreakpointsToMediaQueries","breakpoints","values","map","key","breakpointValues","slice","reduce","sum","options","assign","minWidth","maxWidth","mediaQuery","json2mq","state","mqAvailableBreakpoints","ref","currentBreakpoint","readonly","setCurrentBreakpoint","v","isArray","arg","prototype","toString","call","updateBreakpoints","i","mql","cb","removeEventListener","splice","mediaQueries","enter","window","matchMedia","matches","push","addEventListener","subscribeToMediaQuery","name","props","required","type","String","tag","setup","context","plusModifier","computed","activeBreakpoints","findIndex","b","selectBreakpoints","shouldRenderChildren","includes","h","slots","DEFAULT_BREAKPOINTS","sm","md","lg","Infinity","install","app","defaultBreakpoint","hasSetupListeners","provide","mixin","$mq","mounted","config","globalProperties","$mqAvailableBreakpoints","component","MqLayout"],"mappings":"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"}