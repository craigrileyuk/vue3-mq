{"version":3,"file":"index.umd.min.js","sources":["../src/store.js","../src/helpers.js","../src/component.js","../src/index.js"],"sourcesContent":["import { ref, readonly, computed } from \"vue\";\nimport { convertBreakpointsToMediaQueries, subscribeToMediaQuery, listeners, sanitiseBreakpoints, selectBreakpoints } from \"./helpers\";\n\nexport const DEFAULT_BREAKPOINTS = {\n\t\t\t\txs: 576,\n\t\t\t\tsm: 768,\n\t\t\t\tmd: 992,\n\t\t\t\tlg: 1200,\n\t\t\t\txl: 1400,\n\t\t\t\txxl: Infinity,\n\t\t\t}\n\nconst state = {\n  mqAvailableBreakpoints: ref({}),\n  currentBreakpoint: ref(\"\")\n}\n\nexport const setAvailableBreakpoints = (v) => state.mqAvailableBreakpoints.value = v;\nexport const mqAvailableBreakpoints = readonly(state.mqAvailableBreakpoints);\n\nexport const setCurrentBreakpoint = (v) => state.currentBreakpoint.value = v;\nexport const currentBreakpoint = readonly(state.currentBreakpoint);\n\nexport function updateBreakpoints(breakpoints) {\n  // Remove any existing MQ listeners\n  for (let i = listeners.length - 1; i >= 0; i--) {\n    const { mql, cb } = listeners[i];\n    mql.removeEventListener('change', cb);\n    listeners.splice(i,1);\n  }\n\n  sanitiseBreakpoints(breakpoints);\n\n  // Save new breakpoints to reactive variable\n  setAvailableBreakpoints(breakpoints);\n  // Create css media queries from breakpoints\n  const mediaQueries = convertBreakpointsToMediaQueries(breakpoints);\n\n  // Add new MQ listeners\n  for (const key in mediaQueries) {\n    const mediaQuery = mediaQueries[key];\n    const enter = () => { setCurrentBreakpoint(key) }\n    subscribeToMediaQuery(mediaQuery, enter)\n  }\n}\n\nexport function shouldRender(mq) {\n        const isMqArray = Array.isArray(mq);\n        const isMqPlus = !isMqArray.value && /\\+$/.test(mq) === true;\n        const isMqMinus = !isMqArray.value && /-$/.test(mq) === true;\n        const isMqRange = !isMqArray.value && /^\\w*-\\w*/.test(mq) === true;\n        const activeBreakpoints = computed(() => {\n            if (isMqArray) return mq;\n            else if (!isMqPlus && !isMqMinus && !isMqRange) return [mq];\n            else {\n                return selectBreakpoints({mqProp: mq, isMqPlus: { value: isMqPlus}, isMqMinus: { value: isMqMinus}, isMqRange: { value: isMqRange} });\n            }\n        });\n\n        return activeBreakpoints.value.includes(currentBreakpoint.value)\n}","import json2mq from 'json2mq';\nimport { mqAvailableBreakpoints } from \"./store\";\nexport const listeners = [];\n\nexport function convertBreakpointsToMediaQueries(breakpoints) {\n  const keys = Object.keys(breakpoints)\n  const values = keys.map(key => breakpoints[key])\n  const breakpointValues = [0, ...values.slice(0, -1)]\n  const mediaQueries = breakpointValues.reduce((accumulator, current, index) => {\n    const options = Object.assign(\n      {\n        minWidth: current,\n      },\n      index < keys.length - 1 ? { maxWidth: breakpointValues[index+1] - 1 } : {}\n    )\n    const mediaQuery = json2mq(options)\n    return Object.assign(\n      accumulator,\n      {\n        [keys[index]]: mediaQuery,\n      }\n    )\n  }, {});\n  return mediaQueries\n}\n\nexport function selectBreakpoints({mqProp, isMqPlus = {value: false}, isMqMinus = {value: false}, isMqRange = {value: false}}) {\n  const ents = Object.entries(mqAvailableBreakpoints.value);\n  if (ents.length === 0) return [];\n  if (isMqPlus.value) mqProp = mqProp.replace(/\\+$/,\"\");\n  else if (isMqMinus.value) mqProp = mqProp.replace(/-$/,\"\");\n  else if (isMqRange.value) {\n    mqProp = mqProp.split(\"-\");\n    if (!mqProp || mqProp.length !== 2) throw new Error(\"Invalid MQ range provided\");\n  }\n  let eligible;\n  if (isMqRange.value) {\n    let from = ents.find(([key,value]) => key == mqProp[0].trim());\n    if (!from || from.length === 0) throw new Error('Range from breakpoint (' + mqProp[0].trim() + ') not found');\n    let to = ents.find(([key,value]) => key == mqProp[1].trim());\n    if (!to || to.length === 0) throw new Error('Range to breakpoint (' + mqProp[1].trim() + ') not found');\n    if (from[1] > to[1]) [from,to] = [to,from];\n    eligible = ents.filter(([key,value]) => value >= from[1] && value <= to[1]);\n  }\n  else {\n    const base = ents.find(([key,value]) => key == mqProp);\n    if (isMqPlus.value) eligible = ents.filter(([key,value]) => value >= base[1]);\n    else if (isMqMinus.value) eligible = ents.filter(([key,value]) => value <= base[1]);\n  }\n  eligible.sort((a,b) => a[1] - b[1]);\n  return eligible.map(el => el[0]);\n}\n\nexport function subscribeToMediaQuery(mediaQuery, enter) {\n  const mql = window.matchMedia(mediaQuery)\n  const cb = ({ matches }) => {\n    if (matches) enter()\n  }\n  listeners.push({mql, cb});\n  mql.addEventListener('change', cb) //subscribing\n  cb(mql) //initial trigger\n}\n\nexport function sanitiseBreakpoints(breakpoints) {\n  for (let bp in breakpoints) {\n    if (!['string','number'].includes(typeof bp) || !bp ) throw new Error(\"Invalid or missing breakpoint key\");\n    if (typeof breakpoints[bp] === 'string') breakpoints[bp] = parseFloat(breakpoints[bp].replace(/[^0-9]/g,\"\"));\n    if (typeof breakpoints[bp] !== 'number' || breakpoints[bp] < 0) throw new Error(\"Invalid breakpoint value for \" + bp + \". Please use a valid number.\");\n    if (!breakpoints[bp]) throw new Error(\"No valid breakpoint value for \" + bp + \" was found\");\n  }\n}","// USAGE // mq-layout(mq=\"lg\") // p Iâ€™m lg\nimport {\n    selectBreakpoints\n} from \"./helpers\";\nimport {\n    currentBreakpoint,\n    shouldRender\n} from \"./store\";\nimport {\n    computed,\n    h,\n    Transition,\n    TransitionGroup\n} from \"vue\";\n\nexport default {\n    name: \"MqLayout\",\n    props: {\n        mq: {\n            type: [String,Array]\n        },\n        tag: {\n            type: String,\n            default: \"div\"\n        },\n        group: {\n            type: Boolean,\n            default: false\n        }\n    },\n    setup(props, context) {\n        const defaultOptions = {\n            name: \"fade\",\n            mode: \"out-in\"\n        }\n        const isMqArray = computed(() => Array.isArray(props.mq));\n        const isMqPlus = computed(\n            () => !isMqArray.value && /\\+$/.test(props.mq) === true\n        );\n        const isMqMinus = computed(\n            () => !isMqArray.value && /-$/.test(props.mq) === true\n        );\n        const isMqRange = computed(\n            () => !isMqArray.value && /^\\w*-\\w*/.test(props.mq) === true\n        );\n\n        const activeBreakpoints = computed(() => {\n            if (isMqArray.value) return props.mq;\n            else if (!isMqPlus.value && !isMqMinus.value && !isMqRange.value) return [props.mq];\n            else {\n                return selectBreakpoints({mqProp: props.mq, isMqPlus, isMqMinus, isMqRange });\n            }\n        });\n\n        const shouldRenderChildren = computed(() =>\n            activeBreakpoints.value.includes(currentBreakpoint.value)\n        );\n\n\n        const renderSlots = (tag) => {\n            let slots = [];\n            for (let slot in context.slots) {\n                if (!props.group && slots.length > 0) return slots;\n                let shouldRenderSlot = computed(() => shouldRender(slot.split(\":\")[0]));\n                if (shouldRenderSlot.value) {\n                    slots.push(h(tag ? tag : context.slots[slot],{ key: slot }, tag ? context.slots[slot]() : undefined));\n                }\n            }\n            return slots;\n        }\n        if (context.slots.default) {\n            return () =>\n            shouldRenderChildren.value ?\n            h(props.tag, {}, context.slots.default()) :\n            h();\n        }\n        else {\n            return () => {\n                const transitionOptions = {...defaultOptions, ...context.attrs };\n                const el = props.group ? TransitionGroup : Transition;\n                return h(el, transitionOptions, renderSlots(props.tag))\n            }\n        }\n    }\n};\n","import MqLayout from './component';\nimport { setCurrentBreakpoint, currentBreakpoint, updateBreakpoints, DEFAULT_BREAKPOINTS } from \"./store\";\nimport { readonly } from \"vue\";\n\nconst install = function (app, { breakpoints = DEFAULT_BREAKPOINTS, defaultBreakpoint = 'sm' } = {}) {  \n  let hasSetupListeners = false\n  setCurrentBreakpoint(defaultBreakpoint);\n\n  app.provide('updateBreakpoints', updateBreakpoints);\n  app.provide('mq', readonly(currentBreakpoint));\n\n  // Init reactive component\n  app.mixin({\n    computed: {\n      $mq() {\n        return currentBreakpoint.value;\n      }\n    },\n    mounted() {\n      if (!hasSetupListeners) {\n        updateBreakpoints(breakpoints)\n        hasSetupListeners = true\n      }\n    }\n  })\n\n  app.config.globalProperties.$mqAvailableBreakpoints = breakpoints;\n  app.component('MqLayout', MqLayout);\n}\n\nexport default {\n  install\n}"],"names":["DEFAULT_BREAKPOINTS","xs","sm","md","lg","xl","xxl","Infinity","state","mqAvailableBreakpoints","ref","currentBreakpoint","readonly","setCurrentBreakpoint","v","value","updateBreakpoints","breakpoints","i","listeners","length","mql","cb","removeEventListener","splice","bp","includes","Error","parseFloat","replace","sanitiseBreakpoints","mediaQueries","keys","Object","values","map","key","breakpointValues","slice","reduce","accumulator","current","index","options","assign","minWidth","maxWidth","mediaQuery","json2mq","convertBreakpointsToMediaQueries","enter","window","matchMedia","matches","push","addEventListener","subscribeToMediaQuery","selectBreakpoints","eligible","mqProp","isMqPlus","isMqMinus","isMqRange","ents","entries","split","from","find","trim","to","filter","base","sort","a","b","el","name","props","mq","type","String","Array","tag","group","Boolean","setup","context","defaultOptions","mode","isMqArray","computed","isArray","test","activeBreakpoints","shouldRenderChildren","renderSlots","slots","slot","shouldRender","h","undefined","transitionOptions","attrs","TransitionGroup","Transition","install","app","defaultBreakpoint","hasSetupListeners","provide","mixin","$mq","mounted","config","globalProperties","$mqAvailableBreakpoints","component","MqLayout"],"mappings":"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"}