{"version":3,"file":"index.umd.min.js","sources":["../src/store.js","../src/helpers.js","../src/component.js","../src/index.js"],"sourcesContent":["import { ref, readonly, computed } from \"vue\";\nimport {\n\tconvertBreakpointsToMediaQueries,\n\tsubscribeToMediaQuery,\n\tlisteners,\n\tsanitiseBreakpoints,\n\tselectBreakpoints,\n} from \"./helpers\";\nconst test = \"THIS IS A TEST\";\n\nexport const DEFAULT_BREAKPOINTS = {\n\txs: 576,\n\tsm: 768,\n\tmd: 992,\n\tlg: 1200,\n\txl: 1400,\n\txxl: Infinity,\n};\n\nconst _currentBreakpoint = ref(\"\");\nconst _mqAvailableBreakpoints = ref({});\n\nexport const setAvailableBreakpoints = (v) =>\n\t(_mqAvailableBreakpoints.value = v);\nexport const mqAvailableBreakpoints = readonly(_mqAvailableBreakpoints);\n\nexport const setCurrentBreakpoint = (v) => (_currentBreakpoint.value = v);\nexport const currentBreakpoint = readonly(_currentBreakpoint);\n\nexport function updateBreakpoints(breakpoints) {\n\t// Remove any existing MQ listeners\n\tfor (let i = listeners.length - 1; i >= 0; i--) {\n\t\tconst { mql, cb } = listeners[i];\n\t\tmql.removeEventListener(\"change\", cb);\n\t\tlisteners.splice(i, 1);\n\t}\n\n\tsanitiseBreakpoints(breakpoints);\n\n\t// Save new breakpoints to reactive variable\n\tsetAvailableBreakpoints(breakpoints);\n\t// Create css media queries from breakpoints\n\tconst mediaQueries = convertBreakpointsToMediaQueries(breakpoints);\n\n\t// Add new MQ listeners\n\tfor (const key in mediaQueries) {\n\t\tconst mediaQuery = mediaQueries[key];\n\t\tconst enter = () => {\n\t\t\tsetCurrentBreakpoint(key);\n\t\t};\n\t\tsubscribeToMediaQuery(mediaQuery, enter);\n\t}\n}\n\nexport function shouldRender(mq) {\n\tconst isMqArray = Array.isArray(mq);\n\tconst isMqPlus = !isMqArray.value && /\\+$/.test(mq) === true;\n\tconst isMqMinus = !isMqArray.value && /-$/.test(mq) === true;\n\tconst isMqRange = !isMqArray.value && /^\\w+-\\w+/.test(mq) === true;\n\tconst activeBreakpoints = computed(() => {\n\t\tif (isMqArray) return mq;\n\t\telse if (!isMqPlus && !isMqMinus && !isMqRange) return [mq];\n\t\telse {\n\t\t\treturn selectBreakpoints({\n\t\t\t\tmqProp: mq,\n\t\t\t\tisMqPlus: { value: isMqPlus },\n\t\t\t\tisMqMinus: { value: isMqMinus },\n\t\t\t\tisMqRange: { value: isMqRange },\n\t\t\t});\n\t\t}\n\t});\n\treturn activeBreakpoints.value.includes(currentBreakpoint.value);\n}\n","import json2mq from \"json2mq\";\nimport { mqAvailableBreakpoints } from \"./store\";\nexport const listeners = [];\n\nexport function convertBreakpointsToMediaQueries(breakpoints) {\n\tconst keys = Object.keys(breakpoints);\n\tconst values = keys.map((key) => breakpoints[key]);\n\tconst breakpointValues = [0, ...values.slice(0, -1)];\n\tconst mediaQueries = breakpointValues.reduce(\n\t\t(accumulator, current, index) => {\n\t\t\tconst options = Object.assign(\n\t\t\t\t{\n\t\t\t\t\tminWidth: current,\n\t\t\t\t},\n\t\t\t\tindex < keys.length - 1\n\t\t\t\t\t? { maxWidth: breakpointValues[index + 1] - 1 }\n\t\t\t\t\t: {}\n\t\t\t);\n\t\t\tconst mediaQuery = json2mq(options);\n\t\t\treturn Object.assign(accumulator, {\n\t\t\t\t[keys[index]]: mediaQuery,\n\t\t\t});\n\t\t},\n\t\t{}\n\t);\n\treturn mediaQueries;\n}\n\nexport function selectBreakpoints({\n\tmqProp,\n\tisMqPlus = { value: false },\n\tisMqMinus = { value: false },\n\tisMqRange = { value: false },\n}) {\n\tconst ents = Object.entries(mqAvailableBreakpoints.value);\n\tif (ents.length === 0) return [];\n\tif (isMqPlus.value) mqProp = mqProp.replace(/\\+$/, \"\");\n\telse if (isMqMinus.value) mqProp = mqProp.replace(/-$/, \"\");\n\telse if (isMqRange.value) {\n\t\tmqProp = mqProp.split(\"-\");\n\t\tif (!mqProp || mqProp.length !== 2)\n\t\t\tthrow new Error(\"Invalid MQ range provided\");\n\t}\n\tlet eligible;\n\tif (isMqRange.value) {\n\t\tlet from = ents.find(([key, value]) => key == mqProp[0].trim());\n\t\tif (!from || from.length === 0)\n\t\t\tthrow new Error(\n\t\t\t\t\"Range from breakpoint (\" + mqProp[0].trim() + \") not found\"\n\t\t\t);\n\t\tlet to = ents.find(([key, value]) => key == mqProp[1].trim());\n\t\tif (!to || to.length === 0)\n\t\t\tthrow new Error(\n\t\t\t\t\"Range to breakpoint (\" + mqProp[1].trim() + \") not found\"\n\t\t\t);\n\t\tif (from[1] > to[1]) [from, to] = [to, from];\n\t\teligible = ents.filter(\n\t\t\t([key, value]) => value >= from[1] && value <= to[1]\n\t\t);\n\t} else {\n\t\tconst base = ents.find(([key, value]) => key == mqProp);\n\t\tif (isMqPlus.value)\n\t\t\teligible = ents.filter(([key, value]) => value >= base[1]);\n\t\telse if (isMqMinus.value)\n\t\t\teligible = ents.filter(([key, value]) => value <= base[1]);\n\t}\n\teligible.sort((a, b) => a[1] - b[1]);\n\treturn eligible.map((el) => el[0]);\n}\n\nexport function subscribeToMediaQuery(mediaQuery, enter) {\n\tconst mql = window.matchMedia(mediaQuery);\n\tconst cb = ({ matches }) => {\n\t\tif (matches) enter();\n\t};\n\tlisteners.push({ mql, cb });\n\tif (mql.addEventListener && typeof mql.addEventListener === \"function\") {\n\t\tmql.addEventListener(\"change\", cb); //subscribing\n\t} else {\n\t\t// Deprecated property included for backwards compatibility\n\t\tmql.addListener(\"change\", cb);\n\t}\n\tcb(mql); //initial trigger\n}\n\nexport function sanitiseBreakpoints(breakpoints) {\n\tfor (let bp in breakpoints) {\n\t\tif (![\"string\", \"number\"].includes(typeof bp) || !bp)\n\t\t\tthrow new Error(\"Invalid or missing breakpoint key\");\n\t\tif (typeof breakpoints[bp] === \"string\")\n\t\t\tbreakpoints[bp] = parseFloat(\n\t\t\t\tbreakpoints[bp].replace(/[^0-9]/g, \"\")\n\t\t\t);\n\t\tif (typeof breakpoints[bp] !== \"number\" || breakpoints[bp] < 0)\n\t\t\tthrow new Error(\n\t\t\t\t\"Invalid breakpoint value for \" +\n\t\t\t\t\tbp +\n\t\t\t\t\t\". Please use a valid number.\"\n\t\t\t);\n\t\tif (!breakpoints[bp])\n\t\t\tthrow new Error(\n\t\t\t\t\"No valid breakpoint value for \" + bp + \" was found\"\n\t\t\t);\n\t}\n}\n","import { selectBreakpoints } from \"./helpers\";\nimport { currentBreakpoint, shouldRender } from \"./store\";\nimport { computed, h, Transition, TransitionGroup } from \"vue\";\n\nexport default {\n\tname: \"MqLayout\",\n\tprops: {\n\t\tmq: {\n\t\t\ttype: [String, Array],\n\t\t},\n\t\ttag: {\n\t\t\ttype: String,\n\t\t\tdefault: \"div\",\n\t\t},\n\t\tgroup: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false,\n\t\t},\n\t},\n\tsetup(props, context) {\n\t\tconst defaultOptions = {\n\t\t\tname: \"fade\",\n\t\t\tmode: \"out-in\",\n\t\t};\n\t\tconst isMqArray = computed(() => Array.isArray(props.mq));\n\t\tconst isMqPlus = computed(\n\t\t\t() => !isMqArray.value && /\\+$/.test(props.mq) === true\n\t\t);\n\t\tconst isMqMinus = computed(\n\t\t\t() => !isMqArray.value && /-$/.test(props.mq) === true\n\t\t);\n\t\tconst isMqRange = computed(\n\t\t\t() => !isMqArray.value && /^\\w*-\\w*/.test(props.mq) === true\n\t\t);\n\n\t\tconst activeBreakpoints = computed(() => {\n\t\t\tif (isMqArray.value) return props.mq;\n\t\t\telse if (!isMqPlus.value && !isMqMinus.value && !isMqRange.value)\n\t\t\t\treturn [props.mq];\n\t\t\telse {\n\t\t\t\treturn selectBreakpoints({\n\t\t\t\t\tmqProp: props.mq,\n\t\t\t\t\tisMqPlus,\n\t\t\t\t\tisMqMinus,\n\t\t\t\t\tisMqRange,\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tconst shouldRenderChildren = computed(() =>\n\t\t\tactiveBreakpoints.value.includes(currentBreakpoint.value)\n\t\t);\n\n\t\tconst renderSlots = (tag) => {\n\t\t\tlet slots = [];\n\t\t\tfor (let slot in context.slots) {\n\t\t\t\tif (!props.group && slots.length > 0) return slots;\n\t\t\t\tlet shouldRenderSlot = computed(() =>\n\t\t\t\t\tshouldRender(slot.split(\":\")[0])\n\t\t\t\t);\n\t\t\t\tif (shouldRenderSlot.value) {\n\t\t\t\t\tslots.push(\n\t\t\t\t\t\th(\n\t\t\t\t\t\t\ttag ? tag : context.slots[slot],\n\t\t\t\t\t\t\t{ key: slot },\n\t\t\t\t\t\t\ttag ? context.slots[slot]() : undefined\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn slots.length > 0 ? slots : undefined;\n\t\t};\n\t\t// If the user includes a bare element inside the mq-layout component\n\t\t// Uses the props.tag property to render an element\n\t\tif (context.slots.default) {\n\t\t\treturn () =>\n\t\t\t\tshouldRenderChildren.value\n\t\t\t\t\t? h(props.tag, {}, context.slots.default())\n\t\t\t\t\t: undefined;\n\t\t} else {\n\t\t\treturn () => {\n\t\t\t\tconst transitionOptions = {\n\t\t\t\t\t...defaultOptions,\n\t\t\t\t\t...context.attrs,\n\t\t\t\t};\n\t\t\t\tconst el = props.group ? TransitionGroup : Transition;\n\t\t\t\treturn h(el, transitionOptions, renderSlots(props.tag));\n\t\t\t};\n\t\t}\n\t},\n};\n","import MqLayout from './component';\nimport { setCurrentBreakpoint, currentBreakpoint, updateBreakpoints, DEFAULT_BREAKPOINTS } from \"./store\";\nimport { readonly } from \"vue\";\n\nconst install = function (app, { breakpoints = DEFAULT_BREAKPOINTS, defaultBreakpoint = 'sm' } = {}) {  \n  let hasSetupListeners = false\n  setCurrentBreakpoint(defaultBreakpoint);\n\n  app.provide('updateBreakpoints', updateBreakpoints);\n  app.provide('mq', readonly(currentBreakpoint));\n\n  // Init reactive component\n  app.mixin({\n    computed: {\n      $mq() {\n        return currentBreakpoint.value;\n      }\n    },\n    mounted() {\n      if (!hasSetupListeners) {\n        updateBreakpoints(breakpoints)\n        hasSetupListeners = true\n      }\n    }\n  })\n\n  app.config.globalProperties.$mqAvailableBreakpoints = breakpoints;\n  app.component('MqLayout', MqLayout);\n}\n\nexport default {\n  install\n}"],"names":["DEFAULT_BREAKPOINTS","xs","sm","md","lg","xl","xxl","Infinity","_currentBreakpoint","ref","_mqAvailableBreakpoints","mqAvailableBreakpoints","readonly","setCurrentBreakpoint","v","value","currentBreakpoint","updateBreakpoints","breakpoints","i","listeners","length","mql","cb","removeEventListener","splice","bp","includes","Error","parseFloat","replace","sanitiseBreakpoints","mediaQueries","keys","Object","values","map","key","breakpointValues","slice","reduce","accumulator","current","index","options","assign","minWidth","maxWidth","mediaQuery","json2mq","convertBreakpointsToMediaQueries","enter","window","matchMedia","matches","push","addEventListener","addListener","subscribeToMediaQuery","selectBreakpoints","eligible","mqProp","isMqPlus","isMqMinus","isMqRange","ents","entries","split","from","find","trim","to","filter","base","sort","a","b","el","name","props","mq","type","String","Array","tag","group","Boolean","setup","context","defaultOptions","mode","isMqArray","computed","isArray","test","activeBreakpoints","shouldRenderChildren","renderSlots","slots","slot","shouldRender","h","undefined","transitionOptions","attrs","TransitionGroup","Transition","install","app","defaultBreakpoint","hasSetupListeners","provide","mixin","$mq","mounted","config","globalProperties","$mqAvailableBreakpoints","component","MqLayout"],"mappings":"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"}